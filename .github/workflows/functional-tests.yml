name: Functional Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  functional-tests:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          curl \
          wget \
          unzip \
          xvfb \
          nodejs \
          npm
          
    - name: Install Neovim
      run: |
        # Use Neovim AppImage for reliable installation
        NEOVIM_VERSION="v0.10.2"
        DOWNLOAD_URL="https://github.com/neovim/neovim/releases/download/${NEOVIM_VERSION}/nvim.appimage"
        echo "Downloading Neovim ${NEOVIM_VERSION} AppImage from: $DOWNLOAD_URL"
        
        # Download the AppImage
        curl -L "$DOWNLOAD_URL" -o nvim.appimage
        if [ ! -f nvim.appimage ] || [ $(stat -c%s nvim.appimage) -lt 1000000 ]; then
          echo "Download failed or file too small"
          ls -la nvim.appimage || echo "File does not exist"
          exit 1
        fi
        
        # Make it executable and install
        chmod +x nvim.appimage
        sudo mv nvim.appimage /usr/local/bin/nvim
        
        # Verify installation works
        /usr/local/bin/nvim --version || exit 1
        
    - name: Verify Neovim installation
      run: |
        nvim --version
        which nvim
        # Ensure Neovim is working properly
        nvim --headless -c "echo 'Neovim is working'" -c "qall!"
        
    - name: Install Playwright
      run: |
        npm install
        npx playwright install chromium --with-deps
        
    - name: Setup test environment
      run: |
        chmod +x ./tests/setup-test-env.sh
        ./tests/setup-test-env.sh
        
    - name: Run plugin loading tests
      run: |
        chmod +x ./tests/test-plugin-loading.sh
        ./tests/test-plugin-loading.sh
        
    - name: Start virtual display for browser tests
      run: |
        export DISPLAY=:99
        Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &
        echo "DISPLAY=:99" >> $GITHUB_ENV
        
    - name: Run HTTP server tests
      run: |
        chmod +x ./tests/test-http-server.sh
        ./tests/test-http-server.sh
        
    - name: Run WebSocket tests
      run: |
        chmod +x ./tests/test-websocket.sh
        ./tests/test-websocket.sh
        
    - name: Run PlantUML processing tests
      run: |
        chmod +x ./tests/test-plantuml-processing.sh
        ./tests/test-plantuml-processing.sh
        
    - name: Run browser UI interaction tests
      run: |
        chmod +x ./tests/test-browser-ui.sh
        ./tests/test-browser-ui.sh
        
    - name: Upload test artifacts
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: test-artifacts
        path: |
          tests/logs/
          tests/screenshots/
        retention-days: 7